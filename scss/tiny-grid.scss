/*
 * Tiny Grid by @alexerlandsson
 * https://alexerlandsson.com
 *
 * This is a CSS grid system used to build responsive websites
 * and applications. For documentation, check out the GitHub repository:
 * https://github.com/alexerlandsson/tiny-grid
 */

@mixin clearfix() {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

@mixin tiny-grid() {

	/* Settings */

	$grid-container-max-width: 1470px !default;
	$grid-columns: 12 !default;
	$grid-gutter: 1.875rem !default;

	$grid-breakpoints: (
		xs: 375px,
		sm: 640px,
		md: 768px,
		lg: 1025px,
		xl: 1200px
	) !default;

	/* Container Elements */

	%container-base {
		margin-left: auto;
		margin-right: auto;
		width: 100%;
		padding-left: ($grid-gutter / 2);
		padding-right: ($grid-gutter / 2);
		box-sizing: border-box;
		@include clearfix();
	}

	.container {
		@extend %container-base;
		max-width: $grid-container-max-width;
	}

	.container-fluid {
		@extend %container-base;
	}

	.row {
		margin-left: ($grid-gutter / -2);
		margin-right: ($grid-gutter / -2);
		box-sizing: border-box;
		@include clearfix();
	}

	/* Columns */

	[class*=" col-"],
	[class^="col-"] {
		position: relative;
		width: 100%;
		float: left;
		padding-left: ($grid-gutter / 2);
		padding-right: ($grid-gutter / 2);
		box-sizing: border-box;
		min-height: 1px;
	}

	/* Create non-breakpoint specific columns */
	@for $i from 1 through $grid-columns {
		.col-#{$i} {
			width: ((100% / $grid-columns) * $i);
		}
		.col-offset-#{$i} {
			margin-left: ((100% / $grid-columns) * $i);
		}
	}

	/* Create breakpoint specific columns */
	@each $breakpoint-name in map-keys($grid-breakpoints) {
		/* Get each key's value */
		$breakpoint-width: map-get($grid-breakpoints, $breakpoint-name);
		/* Create media query for each breakpoint */
		@media (min-width: $breakpoint-width) {
			/* Add width of each col in this breakpoint */
			@for $i from 1 through $grid-columns {
				.col-#{$breakpoint-name}-#{$i} {
					width: ((100% / $grid-columns) * $i);
				}
				.col-#{$breakpoint-name}-offset-#{$i} {
					margin-left: ((100% / $grid-columns) * $i);
				}
			}
		}
	}
}
@include tiny-grid();
